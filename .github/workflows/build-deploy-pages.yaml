name: Build and Deploy Question Answer Portal to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-deploy-pages.yaml
      - public**
      - src**
      - .env
      - index.html
      - package*.json
      - tsconfig*.json
      - vite.config.ts

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: "20.10.0"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Replace Secure Environment Variables
        run: |
          sed -i \
            -e 's|VALUE_OF_REACT_APP_API_URI|${{ vars.API_URI }}|g' \
            -e 's|VALUE_OF_REACT_APP_AZURE_AD_SP_MSAL_CLIENT_ID|${{ vars.AZURE_AD_SP_MSAL_CLIENT_ID }}|g' \
            -e 's|VALUE_OF_REACT_APP_AZURE_TENANT_ID|${{ vars.AZURE_TENANT_ID }}|g' \
            .env

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-question-answer-portal-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-question-answer-portal-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
